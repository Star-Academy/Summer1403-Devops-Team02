upstream search-engine {
    server "131.253.33.220:443" fail_timeout=5s; # bing
    server "87.248.119.251:443" fail_timeout=5s; # yahoo
    server "216.239.38.120:443" fail_timeout=5s; # google
}

# NOTE: Since $upstream_addr is not available at the time of the map directive,
#   we cannot use it to map to the hostname.
## Maps upstream addresses to their corresponding hostnames.
map $upstream_addr $upstream_host {
    "131.253.33.220:443" "www.bing.com";
    "87.248.119.251:443" "www.yahoo.com";
    "216.239.38.120:443" "www.google.com";
    default "stupid-usage-of-load-balancing";
}

server {
    listen 80;
    listen [::]:80;

    types_hash_bucket_size 128;

    resolver 8.8.8.8;
    proxy_http_version 1.1;

    # Block curl and wget
    if ($http_user_agent ~* (curl|wget)) {
        return 403;
    }

    # Static files
    location /static {
        alias /usr/share/static;
        index index.html;
        autoindex on;
    }

    # Load balancer
    location /api/ {
        proxy_pass https://search-engine/;

        proxy_set_header Host $host;
        # proxy_set_header Host $upstream_host;
        proxy_set_header User-Agent $http_user_agent;

        # Remove headers that indicate the presence of a proxy
        proxy_set_header X-Real-IP "";
        proxy_set_header X-Forwarded-For "";
        proxy_set_header X-Forwarded-Proto "";
        proxy_set_header X-Forwarded-Host "";
        proxy_set_header X-Forwarded-Port "";

        proxy_hide_header Content-Security-Policy;

        add_header X-Proxy-Host $proxy_host always;
        add_header X-Upstream-Addr $upstream_addr always;
        add_header X-Upstream-Host $upstream_host always;
    }

    # Redirect /API/ to /api/
    location /API/ {
        return 301 /api/;
    }
}
